name: test-it
# Uses a different workflow for IT test to run only when changes are in the dashgit-updater code
on:
  push:
    paths:
      - 'dashgit-updater/**'
    branches-ignore:
      - 'dependabot/**' #avoid duplicates: only run the PR, not the commit
    tags-ignore:
      - 'v*' #avoids rerun existing commit on release
  pull_request:
    branches:
      - 'main'
    paths:
      - 'dashgit-updater/**'
  workflow_dispatch:

jobs:
  test-it:
    runs-on: ubuntu-latest
    #avoids duplicate execution of pr from local repo, but allows pr from forked repos and dependabot
    #if: (github.event_name != 'pull_request' && ! github.event.pull_request.head.repo.fork) || (github.event_name == 'pull_request' && (github.event.pull_request.head.repo.fork || startsWith(github.head_ref, 'dependabot/')))
    # workaround #31, disables execution on external forks
    if: (github.event_name != 'pull_request' && ! github.event.pull_request.head.repo.fork) || (github.event_name == 'pull_request' && (startsWith(github.head_ref, 'dependabot/') || startsWith(github.head_ref, 'dashgit/combined/')))
    defaults:
      run:
        working-directory: ./dashgit-updater
    permissions:
      contents: write # for mutex on test repos
      checks: write # for junit report
    strategy:
      matrix:
        scope: [Github, Gitlab]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Set up & wait mutex - ${{ matrix.scope }}
        #github standard concurrency control is not enough, we need that all jobs execute, but only accessing the test repository each time
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: ben-z/gh-action-mutex@v1.0.0-alpha.9
        with:
          branch: gh-mutex-${{ matrix.scope }}

      - name: Create it.properties
        # This configuration requires the dashgit-test repos with an owner that is the same as the user that runs this workflow
        # To keet tokens safe, instad of a '*.token' property, when runng if in CI, the it tests look for a '*secret' 
        # that stores the token in the repo that executes this workflos
        run: |
          echo "github.server=https://github.com"             > it.properties
          echo "github.repo=${{ github.actor }}/dashgit-test" >> it.properties
          echo "github.secret=DASHGIT_GITHUB_IT_TOKEN"        >> it.properties
          echo "github.user=${{ github.actor }}"              >> it.properties
          echo "github.email="                                >> it.properties
          echo "gitlab.server=https://gitlab.com"             >> it.properties
          echo "gitlab.repo=${{ github.actor }}/dashgit-test" >> it.properties
          echo "gitlab.secret=DASHGIT_GITLAB_IT_TOKEN"        >> it.properties
          echo "gitlab.user=${{ github.actor }}"              >> it.properties
          echo "gitlab.email="                                >> it.properties
          cat it.properties
      - name: Run IT tests - ${{ matrix.scope }}
        env:
          DASHGIT_GITHUB_IT_TOKEN: ${{ secrets.DASHGIT_GITHUB_IT_TOKEN}}
          DASHGIT_GITLAB_IT_TOKEN: ${{ secrets.DASHGIT_GITLAB_IT_TOKEN}}
        run: mvn test -Dtest=TestIt${{ matrix.scope }}*,TestUt* -Dmaven.test.failure.ignore=true -U --no-transfer-progress

      - name: Generate report checks - ${{ matrix.scope }}
        if: success() || failure() # always run even if the previous step fails
        uses: mikepenz/action-junit-report@v4.1.0
        with:
          check_name: "test-it-result-${{ matrix.scope }}"
          report_paths: "**/surefire-reports/TEST-*.xml"
          fail_on_failure: 'true'
